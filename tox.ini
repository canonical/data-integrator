# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
no_package = True
skip_missing_interpreters = True
env_list = format, lint, unit

[vars]
src_path = {tox_root}/src
tests_path = {tox_root}/tests
all_path = {[vars]src_path} {[vars]tests_path}

[testenv]
allowlist_externals = poetry
setenv =
    PYTHONPATH={tox_root}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=ipdb.set_trace
    PY_COLORS=1
    lxd: CLOUD=localhost
    k8s: CLOUD=microk8s
    kafka: TEST_FILE=test_kafka.py
    mysql: TEST_FILE=test_mysql.py
    mongodb: TEST_FILE=test_mongodb.py
    postgresql: TEST_FILE=test_postgresql.py
    opensearch: TEST_FILE=test_opensearch.py
pass_env =
    CI
    CI_PACKED_CHARMS
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS
    LIBJUJU_VERSION_SPECIFIER

[testenv:format]
description = Apply coding style standards to code
commands =
    poetry install --no-root --no-cache
    poetry run isort {[vars]all_path}
    poetry run black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
commands =
    poetry install --no-root --no-cache
    poetry run codespell {[vars]lib_path}
    poetry run codespell {tox_root} --skip {tox_root}/.git --skip {tox_root}/.tox \
        --skip {tox_root}/build --skip {tox_root}/lib --skip {tox_root}/venv \
        --skip {tox_root}/.mypy_cache --skip {tox_root}/icon.svg --skip poetry.lock
    # pflake8 wrapper supports config from pyproject.toml
    poetry run pflake8 {[vars]all_path}
    poetry run isort --check-only --diff {[vars]all_path}
    poetry run black --check --diff {[vars]all_path}

[testenv:unit]
description = Run unit tests
commands =
    poetry install --no-root --no-cache
    poetry export --without-hashes -f requirements.txt -o requirements.txt
    poetry run coverage run --source={[vars]src_path} \
        -m pytest -v --tb native -s {posargs} {[vars]tests_path}/unit
    poetry run coverage report

[testenv:integration-{lxd, k8s}-{kafka,mysql,mongodb,postgresql,opensearch}]
description = Run integration tests
commands =
    poetry install --no-root --with dev --no-cache
    # Should be in deps, but then the version is not kept strict but keep getting updated
    pip install juju=={env:LIBJUJU_VERSION_SPECIFIER:2.9.42.4}
    poetry export --without-hashes -f requirements.txt -o requirements.txt
    poetry run pytest -v --tb native --log-cli-level=INFO -s --cloud={env:CLOUD} {posargs} {[vars]tests_path}/integration/{env:TEST_FILE}

