# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

[tool.poetry]
name = "data-integrator"
version = "0.1.0"
description = "An integrator charm for handling database credentials"
authors = [
    "Mykola Marzhan <mykola.marzhan@canonical.com>"
]
license = "Apache-2.0"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
ops = "^2.11.0"

[tool.poetry.group.charm-libs.dependencies]
# data_platform_libs/v0/data_interfaces.py
ops = ">=2.0.0"

[tool.poetry.group.format]
optional = true

[tool.poetry.group.format.dependencies]
isort = "^5.13.2"
black = "^24.3.0"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
codespell = "^2.2.6"
pyproject-flake8 = "^6.1.0"
flake8-docstrings = "^1.7.0"
flake8-copyright = "^0.2.4"
flake8-builtins = "^2.2.0"
pep8-naming = "^0.13.3"

[tool.poetry.group.unit.dependencies]
coverage = {extras = ["toml"], version = "^7.4.4"}
pytest = "^8.1.1"
pytest-asyncio = "*"
jinja2 = "^3.1.3"
parameterized = "^0.9.0"

[tool.poetry.group.integration.dependencies]
pytest = "^8.1.1"
pytest-github-secrets = {git = "https://github.com/canonical/data-platform-workflows", tag = "v13.0.0", subdirectory = "python/pytest_plugins/github_secrets"}
pytest-operator = "^0.34.0"
pytest-operator-cache = {git = "https://github.com/canonical/data-platform-workflows", tag = "v13.0.0", subdirectory = "python/pytest_plugins/pytest_operator_cache"}
pytest-operator-groups = {git = "https://github.com/canonical/data-platform-workflows", tag = "v13.0.0", subdirectory = "python/pytest_plugins/pytest_operator_groups"}
juju = "^3.5.0.0"
mysql-connector-python = "^8.3.0"
psycopg2-binary = "^2.9.9"
pymongo = "^4.6.2"
kazoo = "^2.10.0"
kafka-python = "^2.0.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# Testing tools configuration
[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
minversion = "6.0"
log_cli_level = "INFO"
asyncio_mode = "auto"
markers = ["unstable", "only_with_juju_secrets", "only_without_juju_secrets", "only_on_localhost", "only_on_microk8s"]

# Formatting tools configuration
[tool.black]
line-length = 99
target-version = ["py38"]

[tool.isort]
profile = "black"

# Linting tools configuration
[tool.flake8]
max-line-length = 99
max-doc-length = 99
max-complexity = 10
exclude = [".git", "__pycache__", ".tox", "build", "dist", "*.egg_info", "venv"]
select = ["E", "W", "F", "C", "N", "R", "D", "H"]
# Ignore W503, E501 because using black creates errors with this
# Ignore D107 Missing docstring in __init__
ignore = ["W503", "E501", "D107"]
# D100, D101, D102, D103: Ignore missing docstrings in tests
per-file-ignores = ["tests/*:D100,D101,D102,D103,D104"]
docstring-convention = "google"
# Check for properly formatted copyright header in each file
copyright-check = "True"
copyright-author = "Canonical Ltd."
copyright-regexp = "Copyright\\s\\d{4}([-,]\\d{4})*\\s+%(author)s"
